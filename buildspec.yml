version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging into ECR public repository..."
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/r0c3j2a2
  build:
    commands:
      - echo "Building the Docker image..."
      - docker build -t web-app .
      - docker tag web-app:latest public.ecr.aws/r0c3j2a2/vuejsweb/wangzichenglong:latest
  post_build:
    commands:
      - echo "Pushing the Docker image to the public ECR repository..."
      - docker push public.ecr.aws/r0c3j2a2/vuejsweb/wangzichenglong:latest
      # Generate the imagedefinitions.json file
      - echo '[{"name":"app-container","imageUri":"public.ecr.aws/r0c3j2a2/vuejsweb/wangzichenglong:latest"}]' > imagedefinitions.json
      
artifacts:
  files:
    - '**/*'
    - imagedefinitions.json  # Ensure the generated image definitions file is included
  discard-paths: yes
  
  # Needed by ECS CodePipeline to determine the image to deploy
  secondary-artifacts:
    imagedefinitions:
      files:
        - imagedefinitions.json

cache:
  paths:
    - '/root/.m2/**/*'
